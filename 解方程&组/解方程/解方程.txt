1.fzero解非线性方程，roots解多项式方程
fzero函数输入函数句柄，及初值或区间，只能返回一个根结果，如果有多个根，它只能找到离初始值或初始区间最近的一个根。1 如果想找到所有的根
roots函数是用来求解多项式方程的一种函数，它可以返回多项式的所有实根和复根。
roots函数的用法是：
定义一个向量，表示多项式的系数，按照降幂的顺序排列。例如，表示多项式的向量是p = [1 -1 -6]。
调用roots函数，传入系数向量作为参数，得到一个列向量，表示多项式的根。例如，r = roots (p)返回r = [-2; 3]。

2.几种解非线性方程做法：
二分法、牛顿法、牛顿下山法、弦截法、抛物线法都是用来求解非线性方程的数值方法，它们的基本思想是用一些简单的曲线（如直线或抛物线）去逼近方程的根，然后不断地迭代修正，直到满足一定的精度要求。

二分法是最简单的一种方法，它的原理是将方程的根所在的区间不断地二等分，然后根据方程在区间端点处的符号判断根在哪个子区间内，重复这个过程直到区间长度小于给定的误差范围。二分法的优点是算法简单直观，数值解的精度易于判别，局限性是只适用于标量方程，且需要事先确定一个方程的根的隔离区间，过大的隔离区间会导致过长的搜索时间。1

牛顿法是一种更高效的方法，它的原理是在方程曲线上任取一点作为初始近似值，然后在该点处作切线，切线与x轴的交点作为下一个近似值，重复这个过程直到两个相邻近似值之差小于给定的误差范围。牛顿法的优点是收敛速度快，稳定性高，同时也具有较高的精度。缺点是需要计算方程的一阶导数，且不一定对所有函数都适用，有时可能会出现发散或震荡的情况。2

牛顿下山法是在牛顿法的基础上加入了一个下山因子，用来调节迭代步长，使得每次迭代后方程的函数值都能单调下降，从而避免因初始值选取不当造成的结果发散。牛顿下山法相对于牛顿法可以增加收敛性和稳定性，但是会降低收敛速度。1

弦截法是对牛顿法的一种改进，它避免了求导数的过程，而是用两个相邻近似值所在点连成的弦线来代替切线，并以弦线与x轴的交点作为下一个近似值。弦截法相对于牛顿法可以适用于更广泛的函数类型，但是收敛速度会稍慢一些。2

抛物线法是用三个相邻近似值所在点拟合成一条抛物线来逼近方程曲线，并以抛物线与x轴的交点作为下一个近似值。抛物线法相对于弦截法可以提高收敛速度和精度，但是计算量也会增加。

在数学建模比赛中，解方程的方法应该根据具体问题和数据来选择，一般来说，如果方程比较简单且容易求导，可以考虑牛顿法或抛物线法；如果方程比较复杂或不易求导，可以考虑弦截法或二分法；如果方程有多个根或难以确定初始值，可以考虑牛顿下山法或其他全局搜索方法。



